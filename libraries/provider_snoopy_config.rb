# Encoding: UTF-8
#
# Cookbook Name:: snoopy
# Library:: provider_snoopy_config
#
# Copyright 2015-2016, Socrata, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chef/exceptions'
require 'chef/provider/lwrp_base'

class Chef
  class Provider
    # A Chef provider for the Snoopy Logger configuration file.
    #
    # @author Jonathan Hartman <jonathan.hartman@socrata.com>
    class SnoopyConfig < LWRPBase
      PATH ||= '/etc/snoopy.ini'.freeze

      use_inline_resources

      provides(:snoopy_config) if defined?(provides)

      #
      # WhyRun is supported by this provider
      #
      # (see Chef::Provider#whyrun_supported?)
      #
      def whyrun_supported?
        true
      end

      #
      # Render and drop off a snoopy.ini.
      #
      action :create do
        chef_gem('inifile') do
          Chef::Resource::ChefGem
            .instance_methods(false)
            .include?(:compile_time) && compile_time(false)
        end
        file PATH do
          content lazy {
            require 'inifile'
            ini = IniFile.new
            # `nil.to_h` wasn't valid Ruby yet in the 1.9.3 packaged with
            # Chef 11.16.4.
            ini[:snoopy] = new_resource.config || {}
            <<-EOH.gsub(/^ {14}/, '').strip
              ;;; This file generated by Chef.
              ;;; Do not modify it by hand. Any changes will be overwritten.
              #{ini}
            EOH
          }
        end
      end

      #
      # Delete a snoopy.ini. Since we can't know for sure whether another
      # cookbook is using the inifile gem, it can't be removed here.
      #
      action :remove do
        file(PATH) { action :delete }
      end
    end
  end
end
